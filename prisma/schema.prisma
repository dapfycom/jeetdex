generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Users {
  id            String    @id @default(cuid())
  username      String    @unique
  address       String    @unique
  img           String
  bio           String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  likesReceived Likes[]   @relation("likesReceived")
  likesGiven    Likes[]   @relation("likesGiven")
  followed      Follows[] @relation("followed")
  following     Follows[] @relation("following")

  messages Messages[] @relation("messages")
}

model Likes {
  id String @id @default(cuid())

  likedBy   Users?  @relation("likesGiven", fields: [likedById], references: [id])
  likedById String?

  userLikes Users?  @relation("likesReceived", fields: [userId], references: [id])
  userId    String?

  createdAt DateTime @default(now())

  message   Messages @relation("message-likes", fields: [messageId], references: [id])
  messageId String
}

model Follows {
  id         String @id @default(cuid())
  followed   Users  @relation("followed", fields: [followedId], references: [id])
  followedId String

  following   Users  @relation("following", fields: [followingId], references: [id])
  followingId String
}

model Chats {
  id        String     @id @default(cuid())
  pool      String     @unique
  createdAt DateTime   @default(now())
  messages  Messages[]
}

model Messages {
  id        String   @id @default(cuid())
  content   String
  type      String   @default("text")
  createdAt DateTime @default(now())
  chat      Chats    @relation(fields: [chatId], references: [id])
  chatId    String
  sender    Users    @relation("messages", fields: [senderId], references: [id])
  senderId  String

  likes Likes[] @relation("message-likes")
}
